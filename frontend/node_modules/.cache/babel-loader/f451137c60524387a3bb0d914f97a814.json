{"ast":null,"code":"var _jsxFileName = \"/Users/cameroncronheimer/Desktop/BrockChatbot/frontend/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef } from \"react\";\nimport \"./styles.css\";\nimport { FaArrowUp } from \"react-icons/fa\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [inputText, setInputText] = useState({\n    message: \"\",\n    from: \"user\"\n  });\n  const [messages, setNewMessage] = useState([{\n    message: \"How can I help you?\",\n    from: \"bot\"\n  }]);\n  const dummy = useRef();\n\n  const addMessage = e => {\n    e.preventDefault();\n    setNewMessage([...messages, inputText]);\n    dummy.current.scrollIntoView({\n      behavior: \"smooth\"\n    });\n    console.log(messages);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-bar-collapsible\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"chat-button\",\n      type: \"button\",\n      class: \"collapsible\",\n      children: [\" \", \"Chat with us!\", /*#__PURE__*/_jsxDEV(\"i\", {\n        id: \"chat-icon\",\n        style: {\n          color: \"#fff\"\n        },\n        className: \"fa fa-fw-comments-o\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"full-chat-block\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"outer-container\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chat-container\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              id: \"chatbox\",\n              children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                id: \"chat-timestamp\",\n                children: \"Time\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 39,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                id: \"botStarterMessage\",\n                className: \"botText\",\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"Loading...\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 40,\n                  columnNumber: 65\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 40,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"chat-bar-input-block\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  id: \"userInput\",\n                  children: /*#__PURE__*/_jsxDEV(\"input\", {\n                    id: \"textInput\",\n                    className: \"input-box\",\n                    type: \"text\",\n                    name: \"msg\",\n                    placeholder: \"Tap to Enter to send a message\",\n                    children: [/*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 47,\n                      columnNumber: 21\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"chat-bar-icons\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 49,\n                      columnNumber: 21\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 45,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 44,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 43,\n                columnNumber: 18\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this); // return (\n  //   <div className=\"container\">\n  //   <div className=\"chat-title\">Chatbot</div>\n  //     <div className=\"chat-container\">\n  //       <div className=\"chat\">\n  //         <MessageList messages={messages} />\n  //         <div className=\"scrollInto\" ref={dummy}></div>\n  //       </div>\n  //     </div>\n  //     <div id=\"myInput\" className=\"chat-input-container\">\n  //       <input\n  //         onKeyPress={(event) => {if (event.key === \"Enter\") {addMessage(event)}}}\n  //         className=\"chat-input\"\n  //         onChange={(e) => {\n  //           setInputText({message: e.target.value, from: \"user\"});\n  //         }}\n  //         placeholder=\"Enter Question!\"\n  //       />\n  //       <div id=\"myBtn\" className=\"add-question-button\" onClick={addMessage} >\n  //         <FaArrowUp />\n  //       </div>\n  //     </div>\n  //   </div>\n  // );\n}\n\n_s(App, \"QOIwtFKrvFg8araslhNqzVk3Ldw=\");\n\n_c = App;\n\nfunction MessageList(props) {\n  const messages = props.messages;\n  const listMessages = messages.map(_ref => {\n    let {\n      message,\n      from\n    } = _ref;\n    return /*#__PURE__*/_jsxDEV(Message, {\n      value: message,\n      from: from\n    }, (message + Date.now()).toString(), false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 5\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: listMessages\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 10\n  }, this);\n}\n\n_c2 = MessageList;\n\nfunction Message(props) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"message-\" + props.from + \"-container\",\n    children: [props.from === \"bot\" && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bot-profile\",\n      children: \"\\uD83E\\uDD16\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 32\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"message-\" + props.from,\n      children: props.value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 5\n  }, this);\n}\n\n_c3 = Message;\nexport default App;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"MessageList\");\n$RefreshReg$(_c3, \"Message\");","map":{"version":3,"sources":["/Users/cameroncronheimer/Desktop/BrockChatbot/frontend/src/App.js"],"names":["React","useState","useRef","FaArrowUp","App","inputText","setInputText","message","from","messages","setNewMessage","dummy","addMessage","e","preventDefault","current","scrollIntoView","behavior","console","log","color","MessageList","props","listMessages","map","Date","now","toString","Message","value"],"mappings":"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","sourcesContent":["import React, { useState, useRef } from \"react\";\nimport \"./styles.css\";\nimport { FaArrowUp } from \"react-icons/fa\";\n\nfunction App() {\n  const [inputText, setInputText] = useState({ message: \"\", from: \"user\" });\n  const [messages, setNewMessage] = useState([\n    { message: \"How can I help you?\", from: \"bot\" },\n  ]);\n\n  const dummy = useRef();\n\n  const addMessage = (e) => {\n    e.preventDefault();\n    setNewMessage([...messages, inputText]);\n    dummy.current.scrollIntoView({ behavior: \"smooth\" });\n    console.log(messages);\n  };\n\n  return (\n    <div className=\"chat-bar-collapsible\">\n      <button id=\"chat-button\" type=\"button\" class=\"collapsible\">\n        {\" \"}\n        Chat with us!\n        <i\n          id=\"chat-icon\"\n          style={{ color: \"#fff\" }}\n          className=\"fa fa-fw-comments-o\"\n        ></i>\n      </button>\n\n      <div className=\"content\">\n        <div className=\"full-chat-block\">\n          {/* Message Container */} \n            <div className=\"outer-container\">\n              <div className=\"chat-container\">\n                {/* Messages */}\n                <div id=\"chatbox\">\n                  <h5 id=\"chat-timestamp\">Time</h5>\n                  <p id=\"botStarterMessage\" className=\"botText\"><span>Loading...</span></p>\n\n                 {/* User Input Box */}\n                 <div className=\"chat-bar-input-block\">\n                  <div id=\"userInput\">\n                    <input id=\"textInput\" className=\"input-box\"  type=\"text\" name=\"msg\" placeholder=\"Tap to Enter to send a message\">\n                   \n                    <p></p>\n\n                    <div className=\"chat-bar-icons\">\n\n                    </div>\n                    </input>\n                  </div>\n\n                 </div>\n                </div>\n              </div>\n            </div>\n          </div>\n      </div>\n    </div>\n  );\n  // return (\n  //   <div className=\"container\">\n\n  //   <div className=\"chat-title\">Chatbot</div>\n\n  //     <div className=\"chat-container\">\n  //       <div className=\"chat\">\n  //         <MessageList messages={messages} />\n  //         <div className=\"scrollInto\" ref={dummy}></div>\n  //       </div>\n  //     </div>\n\n  //     <div id=\"myInput\" className=\"chat-input-container\">\n  //       <input\n  //         onKeyPress={(event) => {if (event.key === \"Enter\") {addMessage(event)}}}\n  //         className=\"chat-input\"\n  //         onChange={(e) => {\n  //           setInputText({message: e.target.value, from: \"user\"});\n  //         }}\n  //         placeholder=\"Enter Question!\"\n  //       />\n  //       <div id=\"myBtn\" className=\"add-question-button\" onClick={addMessage} >\n\n  //         <FaArrowUp />\n  //       </div>\n  //     </div>\n  //   </div>\n  // );\n}\n\nfunction MessageList(props) {\n  const messages = props.messages;\n  const listMessages = messages.map(({ message, from }) => (\n    <Message\n      key={(message + Date.now()).toString()}\n      value={message}\n      from={from}\n    />\n  ));\n\n  return <div>{listMessages}</div>;\n}\n\nfunction Message(props) {\n  return (\n    <div className={\"message-\" + props.from + \"-container\"}>\n      {props.from === \"bot\" && <div className=\"bot-profile\">🤖</div>}\n      <div className={\"message-\" + props.from}>{props.value}</div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}