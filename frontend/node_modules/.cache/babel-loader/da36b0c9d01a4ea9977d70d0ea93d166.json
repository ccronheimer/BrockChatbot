{"ast":null,"code":"var _jsxFileName = \"/Users/cameroncronheimer/Desktop/BrockChatbot/frontend/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef, useEffect } from \"react\";\nimport \"./styles.css\";\nimport { FaArrowUp } from \"react-icons/fa\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [inputText, setInputText] = useState({\n    message: \"\",\n    from: \"user\"\n  });\n  const [messages, setNewMessage] = useState([{\n    message: \"How can I help you?\",\n    from: \"bot\"\n  }]);\n  const dummy = useRef();\n\n  const addMessage = e => {\n    e.preventDefault();\n    setNewMessage([...messages, inputText]);\n    dummy.current.scrollIntoView({\n      behavior: \"smooth\"\n    });\n    console.log(messages);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-title\",\n      children: \"Chatbot\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat\",\n        children: [/*#__PURE__*/_jsxDEV(MessageList, {\n          messages: messages\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"scrollInto\",\n          ref: dummy\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"myInput\",\n      className: \"chat-input-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        onKeyPress: event => {\n          if (event.key === \"Enter\") {\n            addMessage(event);\n          }\n        },\n        className: \"chat-input\",\n        onChange: e => {\n          setInputText({\n            message: e.target.value,\n            from: \"user\"\n          });\n        },\n        placeholder: \"Enter Question!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"myBtn\",\n        className: \"add-question-button\",\n        onClick: addMessage,\n        children: /*#__PURE__*/_jsxDEV(FaArrowUp, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"QOIwtFKrvFg8araslhNqzVk3Ldw=\");\n\n_c = App;\n\nfunction MessageList(props) {\n  const messages = props.messages;\n  const listMessages = messages.map((_ref, index) => {\n    let {\n      message,\n      from,\n      onChipPress\n    } = _ref;\n    return /*#__PURE__*/_jsxDEV(Message, {\n      value: message,\n      from: from,\n      onChipPress: onChipPress\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: listMessages\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 10\n  }, this);\n}\n\n_c2 = MessageList;\n\nfunction Message(props) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"message-\" + props.from + \"-container\",\n    children: [props.from === \"bot\" && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bot-profile\",\n      children: \"\\uD83E\\uDD16\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 32\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"message-\" + props.from,\n      children: props.value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), props.from === \"bot\" && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chips\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"A\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"B\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 32\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n}\n\n_c3 = Message;\nexport default App;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"MessageList\");\n$RefreshReg$(_c3, \"Message\");","map":{"version":3,"sources":["/Users/cameroncronheimer/Desktop/BrockChatbot/frontend/src/App.js"],"names":["React","useState","useRef","useEffect","FaArrowUp","App","inputText","setInputText","message","from","messages","setNewMessage","dummy","addMessage","e","preventDefault","current","scrollIntoView","behavior","console","log","event","key","target","value","MessageList","props","listMessages","map","index","onChipPress","Message"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\nimport \"./styles.css\";\nimport { FaArrowUp } from \"react-icons/fa\";\n\nfunction App() {\n  const [inputText, setInputText] = useState({ message: \"\", from: \"user\" });\n  const [messages, setNewMessage] = useState([\n    { message: \"How can I help you?\", from: \"bot\" },\n  ]);\n\n  const dummy = useRef();\n\n\n  const addMessage = (e) => {\n    e.preventDefault();\n    setNewMessage([...messages, inputText]);\n    \n    dummy.current.scrollIntoView({ behavior: \"smooth\" });\n  \n    console.log(messages);\n  };\n\n  return (\n    <div className=\"container\">\n      <div className=\"chat-title\">Chatbot</div>\n\n      <div className=\"chat-container\">\n        <div className=\"chat\">\n          <MessageList messages={messages} />\n          <div className=\"scrollInto\" ref={dummy}></div>\n        </div>\n      </div>\n\n      <div id=\"myInput\" className=\"chat-input-container\">\n        <input\n          onKeyPress={(event) => {\n            if (event.key === \"Enter\") {\n              addMessage(event);\n            }\n          }}\n          className=\"chat-input\"\n          onChange={(e) => {\n            setInputText({ message: e.target.value, from: \"user\" });\n          }}\n          placeholder=\"Enter Question!\"\n        />\n        <div id=\"myBtn\" className=\"add-question-button\" onClick={addMessage}>\n          <FaArrowUp />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nfunction MessageList(props) {\n  const messages = props.messages;\n  \n  const listMessages = messages.map(({ message, from, onChipPress }, index) => (\n    <Message\n      key={index}\n      value={message}\n      from={from}\n      onChipPress={onChipPress}\n    />\n  ));\n\n  return <div>{listMessages}</div>;\n}\n\nfunction Message(props) {\n\n\n  return (\n    <div className={\"message-\" + props.from + \"-container\"}>\n      {props.from === \"bot\" && <div className=\"bot-profile\">🤖</div>}\n      <div className={\"message-\" + props.from}>{props.value}</div>\n      \n      {props.from === \"bot\" && <div className=\"chips\">\n      <button>A</button>\n      <button>B</button>\n      <button>C</button>\n      </div>\n      }\n    </div>\n    \n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}